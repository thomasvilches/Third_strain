
function days_vac_f()

    v = [105;
        106;
        107;
        108;
        109;
        110;
        111;
        112;
        113;
        114;
        115;
        116;
        117;
        118;
        119;
        120;
        121;
        122;
        123;
        124;
        125;
        126;
        127;
        128;
        129;
        130;
        131;
        132;
        133;
        134;
        135;
        136;
        137;
        138;
        139;
        140;
        141;
        142;
        143;
        144;
        145;
        146;
        147;
        148;
        149;
        150;
        151;
        152;
        153;
        154;
        155;
        156;
        157;
        158;
        159;
        160;
        161;
        162;
        163;
        164;
        165;
        166;
        167;
        168;
        169;
        170;
        171;
        172;
        173;
        174;
        175;
        176;
        177;
        178;
        179;
        180;
        181;
        182;
        183;
        184;
        185;
        186;
        187;
        188;
        189;
        190;
        191;
        192;
        193;
        194;
        195;
        196;
        197;
        198;
        199;
        200;
        201;
        202;
        203;
        204;
        205;
        206;
        207;
        208;
        209;
        210;
        211;
        212;
        213;
        214;
        215;
        216;
        217;
        218;
        219;
        220;
        221;
        222;
        223;
        224;
        225;
        226;
        227;
        228;
        229;
        230;
        231;
        232;
        233;
        234;
        235;
        236;
        237;
        238;
        239;
        240;
        241;
        242;
        243;
        244;
        245;
        246;
        247;
        248;
        249;
        250;
        251;
        252;
        253;
        254;
        255;
        256;
        257;
        258;
        259;
        260;
        261;
        262;
        263;
        264;
        265;
        266;
        267;
        268;
        269;
        270;
        271;
        272;
        273;
        274;
        275;
        276;
        277;
        278;
        279;
        280;
        281;
        282;
        283;
        284;
        285;
        286;
        287;
        288;
        289;
        290;
        291;
        292;
        293;
        294;
        295;
        296;
        297;
        298;
        299;
        300;
        301;302;303;304;305;306]
    
    return v
end

function vaccination_rate_1()

    v = [0 0 0 0 0 0 0 0;
        0	0	0	1	30	18	4	0;
        0	0	0	1	34	15	2	0;
        0	0	0	1	41	22	4	1;
        0	0	0	0	13	5	1	0;
        0	0	0	0	8	4	1	0;
        0	0	0	1	33	26	7	8;
        0	0	0	2	56	39	10	8;
        0	0	0	4	77	57	15	16;
        0	0	0	2	40	32	7	3;
        0	0	0	0	1	1	0	0;
        0	0	0	2	23	18	4	4;
        0	0	0	3	20	14	4	4;
        0	0	0	4	55	50	12	9;
        0	0	0	4	52	49	12	10;
        0	0	0	5	60	57	14	15;
        0	0	0	3	36	30	8	8;
        0	0	0	0	0	0	0	0;
        0	0	0	3	22	14	3	2;
        0	0	0	3	19	13	3	3;
        0	0	0	5	57	55	13	13;
        0	0	0	7	63	64	17	14;
        0	0	0	10	81	81	21	18;
        0	0	0	12	77	73	19	15;
        0	0	0	11	82	71	18	14;
        0	0	0	7	41	31	8	5;
        0	0	0	7	41	31	8	6;
        0	0	0	13	124	97	22	49;
        0	0	0	12	120	99	34	66;
        0	0	0	11	107	101	69	85;
        0	0	0	12	108	104	97	101;
        0	0	0	10	89	84	85	75;
        0	0	0	10	81	78	103	84;
        0	0	0	8	61	58	88	68;
        0	0	0	8	66	74	93	77;
        0	0	0	10	88	93	119	93;
        0	0	0	9	85	90	123	102;
        0	0	0	6	52	66	97	79;
        0	0	0	6	52	62	92	75;
        0	0	0	4	31	36	64	46;
        0	0	0	2	16	20	25	19;
        0	0	0	4	32	39	44	34;
        0	0	0	4	33	45	64	48;
        0	0	0	5	41	53	83	60;
        0	0	0	9	70	82	115	85;
        0	0	0	10	78	85	115	84;
        0	0	0	5	34	47	79	53;
        0	0	0	4	26	37	55	30;
        0	0	0	0	3	4	4	2;
        0	0	0	1	5	7	13	6;
        0	0	0	4	29	41	75	43;
        0	0	0	8	57	67	119	66;
        0	0	0	8	62	70	117	66;
        0	0	0	6	50	63	95	56;
        0	0	0	5	32	37	46	22;
        0	0	0	5	39	51	68	37;
        0	0	0	5	39	49	72	37;
        0	0	0	8	50	59	73	42;
        0	0	0	12	82	86	96	54;
        0	0	0	12	85	93	170	94;
        0	0	0	10	61	71	121	69;
        0	0	0	5	38	46	67	37;
        0	0	0	6	40	52	34	20;
        0	0	0	4	33	51	50	29;
        0	0	0	5	38	61	54	32;
        0	0	0	4	32	51	36	19;
        0	0	0	6	35	55	38	22;
        0	0	0	5	28	47	32	20;
        0	0	0	2	16	30	15	11;
        0	0	0	5	36	58	33	18;
        0	0	0	9	71	116	63	38;
        0	0	0	13	92	145	111	66;
        0	0	0	25	167	233	139	82;
        0	0	0	26	180	267	169	102;
        0	0	0	25	151	231	126	76;
        0	0	0	26	154	210	90	52;
        0	0	0	16	103	161	118	65;
        0	0	0	20	127	205	130	73;
        0	0	0	24	136	220	123	70;
        0	0	0	32	186	285	130	73;
        0	0	0	35	187	296	129	73;
        0	0	0	29	159	233	88	48;
        0	0	0	24	131	186	55	31;
        0	0	0	23	135	193	73	42;
        0	0	0	21	124	179	87	50;
        0	0	0	27	154	265	106	58;
        0	0	0	32	188	337	96	57;
        0	0	0	31	175	288	78	44;
        0	0	0	27	141	226	56	30;
        0	0	0	23	119	170	34	18;
        0	0	0	22	117	186	45	26;
        0	0	0	26	135	203	59	33;
        0	0	0	31	152	223	63	34;
        0	0	0	38	205	255	62	37;
        0	0	0	39	194	240	59	34;
        0	0	0	34	168	190	43	24;
        0	0	0	27	137	141	27	14;
        0	0	0	30	162	153	35	19;
        0	0	0	31	165	193	41	24;
        0	0	0	31	163	229	42	24;
        0	0	0	33	175	244	40	22;
        0	0	0	30	152	217	36	20;
        0	0	0	29	141	202	33	17;
        0	0	0	25	112	144	21	10;
        0	0	0	29	138	198	29	16;
        0	0	0	27	182	210	38	22;
        0	0	0	30	256	237	39	23;
        0	0	0	29	286	219	43	23;
        0	0	0	26	251	187	35	18;
        0	0	0	23	243	160	25	13;
        0	0	0	20	171	98	17	8;
        0	0	0	29	260	167	25	14;
        0	0	0	74	320	189	29	15;
        0	0	0	96	327	187	30	18;
        0	0	0	117	332	195	36	20;
        0	0	0	117	321	182	32	17;
        0	0	0	115	276	153	26	13;
        0	0	0	97	212	117	18	8;
        0	0	0	112	260	145	23	12;
        0	0	0	127	290	163	26	15;
        0	0	0	124	257	164	31	17;
        0	0	0	118	272	176	32	17;
        0	0	0	121	264	174	32	16;
        0	0	0	107	216	158	25	14;
        0	0	0	75	143	101	14	7;
        0	0	0	84	188	132	25	15;
        0	0	0	89	202	146	29	17;
        0	0	0	85	191	142	27	17;
        0	0	0	80	185	144	29	19;
        0	0	0	84	192	148	29	18;
        0	0	0	70	157	121	19	10;
        0	0	0	45	94	65	9	5;
        0	0	0	51	134	101	21	12;
        0	0	0	57	139	106	23	15;
        0	0	0	53	133	100	21	14;
        0	0	0	57	139	108	22	14;
        0	0	0	62	148	113	22	13;
        0	0	0	50	111	85	14	7;
        0	0	0	28	62	41	7	3;
        0	0	0	37	88	68	14	7;
        0	0	0	45	112	83	20	11;
        0	0	0	41	104	83	18	10;
        0	0	0	40	99	77	18	11;
        0	0	0	43	101	81	16	10;
        0	0	0	39	83	60	10	5;
        0	0	0	22	40	26	4	2;
        0	0	0	29	67	55	12	7;
        0	0	0	43	97	71	16	9;
        0	0	1	38	82	64	15	10;
        0	0	62	66	80	64	15	10;
        0	0	57	66	97	75	16	9;
        0	0	64	65	77	58	10	5;
        0	0	50	47	48	32	5	2;
        0	0	44	57	86	62	13	6;
        0	0	38	63	99	69	16	9;
        0	0	36	62	95	69	16	9;
        0	0	32	61	96	71	16	10;
        0	0	38	65	98	70	14	8;
        0	0	37	58	73	54	9	4;
        0	0	19	33	44	30	5	2;
        0	0	20	48	81	55	12	7;
        0	0	21	52	82	56	12	7;
        0	0	21	51	75	55	12	7;
        0	0	20	51	75	52	11	7;
        0	0	24	49	72	50	10	6;
        0	0	21	37	49	35	5	2;
        0	0	11	21	30	18	2	1;
        0	0	5	13	21	14	2	1;
        0	0	17	43	70	44	10	5;
        0	0	16	40	66	44	9	5;
        0	0	20	43	59	41	9	5;
        0	0	19	39	59	41	9	5;
        0	0	20	31	40	29	5	3;
        0	0	12	20	25	16	2	1;
        0	0	13	31	49	34	7	4;
        0	0	16	34	51	35	7	5;
        0	0	11	28	46	33	7	4;
        0	0	12	32	51	34	8	5;
        0	0	15	32	52	36	7	4;
        0	0	17	29	39	26	5	3;
        0	0	6	11	18	11	2	1;
        0	0	10	27	42	29	6	3;
        0	0	12	32	48	35	8	4;
        0	0	12	31	47	33	7	5;
        0	0	12	28	44	32	7	5;
        0	0	15	31	48	35	8	5;
        0	0	14	23	32	23	4	2;
        0	0	6	13	18	12	2	1;
        0	0	11	28	41	28	7	3;
        0	0	11	26	40	29	6	3;
        0	0	11	27	41	30	7	4;
        0	0	10	25	39	28	6	4;
        0	0	13	27	43	31	7	4;
        0	0	13	21	30	22	4	2;
        0	0	8	14	20	13	2	1;
        0	0	14	24	35	24	5	3;
        0	0	12	26	38	27	6	4;
        0	0	10	25	37	27	6	3;
        0	0	12	25	36	26	6	3;
        0	0	12	24	38	27	5	3;
        0	0	9	18	28	19	4	2;
        0	0	2	3	5	4	1	0;
        0	0	9	18	25	17	3	2]
    if p.scenario == :statuscuo

    elseif p.scenario == :half
        v = Int.(round.(v/2))
    else
        v = [0 0 0 0 0 0 0 0;
        0 0 0 0 0 0 0 0]
    end

    return v
end

function vaccination_rate_2()
    
    v = [0 0 0 0 0 0 0 0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	0	0	0	0;
        0	0	0	0	5	3	1	0;
        0	0	0	0	14	9	1	0;
        0	0	0	1	26	15	3	0;
        0	0	0	1	36	18	3	1;
        0	0	0	1	38	20	4	0;
        0	0	0	0	11	5	1	0;
        0	0	0	0	7	3	1	0;
        0	0	0	1	38	30	8	8;
        0	0	0	2	43	32	8	8;
        0	0	0	2	46	37	10	14;
        0	0	0	2	31	22	5	3;
        0	0	0	1	21	15	4	1;
        0	0	0	1	10	9	3	4;
        0	0	0	1	6	5	2	3;
        0	0	0	0	5	10	5	7;
        0	0	0	2	43	42	12	12;
        0	0	0	3	44	39	11	13;
        0	0	0	3	39	34	11	8;
        0	0	0	1	24	19	4	2;
        0	0	0	2	18	12	3	2;
        0	0	0	3	18	12	4	2;
        0	0	0	5	57	52	13	9;
        0	0	0	5	49	46	13	11;
        0	0	0	8	56	51	14	15;
        0	0	0	8	60	54	13	14;
        0	0	0	8	57	44	12	12;
        0	0	0	3	19	13	4	4;
        0	0	0	2	12	10	5	4;
        0	0	0	3	21	21	8	9;
        0	0	0	5	38	37	13	17;
        0	0	0	9	76	82	39	40;
        0	0	0	9	68	73	37	40;
        0	0	0	10	73	72	38	39;
        0	0	0	6	41	36	27	20;
        0	0	0	5	36	27	14	13;
        0	0	0	8	89	80	44	51;
        0	0	0	9	97	87	63	71;
        0	0	0	9	88	82	80	82;
        0	0	0	9	90	91	104	95;
        0	0	0	10	85	77	99	86;
        0	0	0	8	59	56	101	70;
        0	0	0	8	65	62	75	66;
        0	0	0	2	21	28	39	29;
        0	0	0	7	59	68	104	72;
        0	0	0	5	46	56	87	62;
        0	0	0	7	63	69	88	64;
        0	0	0	8	62	63	84	63;
        0	0	0	8	61	64	97	75;
        0	0	0	6	42	45	63	48;
        0	0	0	3	28	34	41	31;
        0	0	0	4	29	41	54	36;
        0	0	0	4	40	51	84	54;
        0	0	0	8	64	76	120	80;
        0	0	0	9	75	84	120	77;
        0	0	0	8	56	63	79	56;
        0	0	0	5	33	41	50	27;
        0	0	0	4	30	38	45	25;
        0	0	0	3	28	35	48	25;
        0	0	0	6	38	47	58	33;
        0	0	0	8	58	71	80	44;
        0	0	0	9	66	78	81	46;
        0	0	0	7	51	67	58	34;
        0	0	0	7	47	58	41	20;
        0	0	0	6	44	58	39	21;
        0	0	0	6	35	48	33	18;
        0	0	0	6	37	54	44	28;
        0	0	0	8	60	78	63	36;
        0	0	0	11	68	87	115	66;
        0	0	0	11	66	87	94	54;
        0	0	0	7	43	56	50	27;
        0	0	0	7	48	70	43	24;
        0	0	0	7	55	85	50	31;
        0	0	0	10	70	102	59	38;
        0	0	0	11	81	115	61	36;
        0	0	0	14	89	133	64	40;
        0	0	0	13	82	121	50	30;
        0	0	0	11	64	88	35	21;
        0	0	0	12	82	122	54	31;
        0	0	0	15	96	148	71	42;
        0	0	0	18	104	156	95	56;
        0	0	0	25	154	223	111	67;
        0	0	0	27	165	234	130	77;
        0	0	0	24	143	203	94	54;
        0	0	0	21	117	156	60	34;
        0	0	0	17	113	166	90	52;
        0	0	0	17	114	170	112	65;
        0	0	0	20	140	200	96	56;
        0	0	0	24	180	258	102	60;
        0	0	0	28	183	260	98	57;
        0	0	0	23	143	192	61	35;
        0	0	0	17	98	120	31	16;
        0	0	0	19	127	163	57	32;
        0	0	0	23	129	158	60	37;
        0	0	0	30	147	186	67	40;
        0	0	0	37	173	225	64	39;
        0	0	0	40	177	213	53	32;
        0	0	0	35	150	172	40	21;
        0	0	0	31	128	143	25	13;
        0	0	0	29	130	155	35	23;
        0	0	0	23	121	175	48	28;
        0	0	0	26	137	216	57	30;
        0	0	0	31	166	229	54	31;
        0	0	0	31	158	226	51	28;
        0	0	0	29	138	191	39	21;
        0	0	0	26	126	155	27	13;
        0	0	0	28	157	187	35	19;
        0	0	0	30	173	197	41	23;
        0	0	0	32	225	220	39	22;
        0	0	0	34	240	240	38	20;
        0	0	0	31	223	214	33	18;
        0	0	0	31	215	196	31	16;
        0	0	0	28	172	139	20	9;
        0	0	0	31	213	191	26	17;
        0	0	0	52	240	202	34	21;
        0	0	0	78	296	228	39	26;
        0	0	0	79	316	210	42	25;
        0	0	0	76	291	185	36	20;
        0	0	0	76	254	155	25	13;
        0	0	0	73	216	117	19	9;
        0	0	0	98	303	180	27	16;
        0	0	0	110	321	184	31	18;
        0	0	0	100	263	162	30	18;
        0	0	0	105	265	166	33	19;
        0	0	0	113	275	173	33	18;
        0	0	0	102	210	141	26	13;
        0	0	0	79	153	92	15	7;
        0	0	0	87	197	130	25	13;
        0	0	0	95	216	149	28	16;
        0	0	0	87	199	146	26	15;
        0	0	0	83	200	146	28	15;
        0	0	0	89	210	159	29	16;
        0	0	0	74	170	133	22	11;
        0	0	0	46	99	69	10	5;
        0	0	0	56	144	108	21	12;
        0	0	0	61	154	120	24	14;
        0	0	0	57	140	111	23	16;
        0	0	0	56	143	111	23	16;
        0	0	0	62	152	120	24	16;
        0	0	0	49	120	93	15	8;
        0	0	0	31	70	50	7	4;
        0	0	0	43	112	89	17	10;
        0	0	0	45	112	86	18	12;
        0	0	0	39	98	81	17	10;
        0	0	0	37	100	81	19	10;
        0	0	0	42	107	90	18	10;
        0	0	0	36	89	67	11	5;
        0	0	0	21	47	30	5	3;
        0	0	0	15	34	25	5	2;
        0	0	1	49	119	91	21	11;
        0	0	2	39	95	73	17	10;
        0	0	41	54	89	69	16	10;
        0	0	48	57	97	74	15	10;
        0	0	51	56	79	57	10	5;
        0	0	44	42	47	30	4	2;
        0	0	40	50	83	60	13	8;
        0	0	37	57	96	67	15	9;
        0	0	31	53	90	68	15	9;
        0	0	27	52	89	65	14	9;
        0	0	35	60	102	71	15	10;
        0	0	30	51	75	54	9	5;
        0	0	17	30	45	29	4	2;
        0	0	20	46	81	57	11	6;
        0	0	21	52	90	60	13	8;
        0	0	20	49	80	57	12	7;
        0	0	18	46	78	54	12	7;
        0	0	21	45	76	53	11	6;
        0	0	19	36	54	38	6	3;
        0	0	9	19	33	19	3	1;
        0	0	7	22	44	32	6	3;
        0	0	14	39	68	45	10	5;
        0	0	14	36	62	45	10	6;
        0	0	16	37	59	42	9	5;
        0	0	16	34	60	42	8	5;
        0	0	17	27	40	29	5	2;
        0	0	9	17	25	15	2	1;
        0	0	11	26	42	29	6	3;
        0	0	13	32	51	34	7	5;
        0	0	9	25	47	32	7	4;
        0	0	10	27	45	30	7	4;
        0	0	12	26	45	32	7	4;
        0	0	10	21	32	21	4	2;
        0	0	1	2	6	3	0	0;
        0	0	7	17	29	19	4	2]
    if p.scenario == :statuscuo

    elseif p.scenario == :half
        v = Int.(round.(v/2.0))
    else
        v = [0 0 0 0 0 0 0 0;
        0 0 0 0 0 0 0 0]
    end
    return v
end