
function days_vac_f()

    v = [107;
    108;
    109;
    110;
    111;
    112;
    113;
    114;
    115;
    116;
    117;
    118;
    119;
    120;
    121;
    122;
    123;
    124;
    125;
    126;
    127;
    128;
    129;
    130;
    131;
    132;
    133;
    134;
    135;
    136;
    137;
    138;
    139;
    140;
    141;
    142;
    143;
    144;
    145;
    146;
    147;
    148;
    149;
    150;
    151;
    152;
    153;
    154;
    155;
    156;
    157;
    158;
    159;
    160;
    161;
    162;
    163;
    164;
    165;
    166;
    167;
    168;
    169;
    170;
    171;
    172;
    173;
    174;
    175;
    176;
    177;
    178;
    179;
    180;
    181;
    182;
    183;
    184;
    185;
    186;
    187;
    188;
    189;
    190;
    191;
    192;
    193;
    194;
    195;
    196;
    197;
    198;
    199;
    200;
    201;
    202;
    203;
    204;
    205;
    206;
    207;
    208;
    209;
    210;
    211;
    212;
    213;
    214;
    215;
    216;
    217;
    218;
    219;
    220;
    221;
    222;
    223;
    224;
    225;
    226;
    227;
    228;
    229;
    230;
    231;
    232;
    233;
    234;
    235;
    236;
    237;
    238;
    239;
    240;
    241;
    242;
    243;
    244;
    245;
    246;
    247;
    248;
    249;
    250;
    251;
    252;
    253;
    254;
    255;
    256;
    257;
    258;
    259;
    260;
    261;
    262;
    263;
    264;
    265;
    266;
    267;
    268;
    269;
    270;
    271;
    272;
    273;
    274;
    275;
    276;
    277;
    278;
    279;
    280;
    281;
    282;
    283;
    284;
    285;
    286;
    287;
    288;
    289;
    290;
    291;
    292;
    293;
    294;
    295;
    296;
    297;
    298;
    299;
    300;
    301;302;303;304;305;306;307;308]
    
    return v
end

function vaccination_rate_1()

    v = [0 0 0 0 0 0 0 0;
    0	0	1	19	14	16	2	0
    0	0	2	20	13	15	3	0;
    0	0	3	26	16	19	4	1;
    0	0	1	8	5	6	1	0;
    0	0	0	5	3	4	1	0;
    0	0	3	28	17	22	4	1;
    0	0	4	43	26	33	6	1;
    0	0	7	63	38	50	10	2;
    0	0	3	31	19	25	5	1;
    0	0	0	1	0	1	0	0;
    0	0	2	18	11	15	3	1;
    0	0	2	16	10	13	3	1;
    0	0	5	45	29	39	8	3;
    0	0	5	44	28	38	8	3;
    0	0	6	51	33	45	10	4;
    0	0	4	28	18	26	6	3;
    0	0	0	0	0	0	0	0;
    0	0	2	15	10	14	3	2;
    0	0	2	13	9	12	3	2;
    0	0	6	46	30	43	11	8;
    0	0	7	52	34	49	13	9;
    0	0	10	65	43	63	17	12;
    0	0	9	60	40	58	17	13;
    0	0	9	58	39	57	17	14;
    0	0	4	27	18	26	9	7;
    0	0	4	26	18	27	9	8;
    0	0	14	86	57	86	31	29;
    0	0	16	92	62	93	35	33;
    0	0	18	102	69	103	41	40;
    0	0	20	113	76	115	48	49;
    0	0	16	90	61	92	40	44;
    0	0	17	91	62	94	45	49;
    0	0	13	70	48	73	37	41;
    0	0	15	78	53	81	43	49;
    0	0	18	97	66	102	55	63;
    0	0	18	97	66	102	58	67;
    0	0	13	69	48	74	44	51;
    0	0	13	64	44	69	44	52;
    0	0	8	39	27	43	29	35;
    0	0	3	17	12	19	14	16;
    0	0	6	32	22	35	26	32;
    0	0	8	40	28	44	34	41;
    0	0	10	48	34	54	44	52;
    0	0	14	71	49	79	68	79;
    0	0	15	71	50	80	72	84;
    0	0	9	41	29	46	43	51;
    0	0	6	28	19	32	31	36;
    0	0	0	2	2	3	3	3;
    0	0	1	6	4	7	7	8;
    0	0	7	34	24	39	41	47;
    0	0	12	55	39	64	68	78;
    0	0	12	55	40	65	71	81;
    0	0	10	46	33	54	61	69;
    0	0	5	24	17	28	33	36;
    0	0	7	32	23	39	46	51;
    0	0	7	33	23	39	47	52;
    0	0	8	37	27	45	55	60;
    0	0	12	52	38	63	80	85;
    0	0	15	71	51	87	111	118;
    0	0	11	51	37	63	82	86;
    0	0	7	29	21	36	49	50;
    0	0	5	23	17	29	39	40;
    0	0	6	25	18	31	43	43;
    0	0	6	28	21	36	50	50;
    0	0	5	21	15	27	37	37;
    0	0	5	23	17	29	41	40;
    0	0	4	19	14	25	35	34;
    0	0	2	11	8	14	20	19;
    0	0	5	22	16	28	41	39;
    0	0	10	43	31	55	81	77;
    0	0	14	61	45	79	117	110;
    0	1	21	92	68	120	177	166;
    0	1	24	106	77	138	207	190;
    0	1	19	86	63	114	171	155;
    0	1	17	74	55	100	151	135;
    0	0	15	65	48	87	131	116;
    0	1	18	77	57	105	158	139;
    0	1	18	80	59	109	164	142;
    0	1	23	97	73	135	204	174;
    0	1	23	99	73	138	209	176;
    0	1	18	76	57	108	162	135;
    0	0	14	58	44	84	124	102;
    0	0	15	64	48	93	136	111;
    0	0	15	63	47	93	134	108;
    0	1	20	84	63	124	177	142;
    0	1	23	97	74	146	205	163;
    0	1	20	84	64	129	177	139;
    0	0	16	66	50	103	137	108;
    0	1	12	50	38	79	103	80;
    0	1	13	55	42	87	112	86;
    0	1	16	63	48	101	128	98;
    0	1	18	70	54	113	140	107;
    0	1	21	84	64	137	165	125;
    0	1	20	80	61	132	154	117;
    0	1	16	65	50	109	124	93;
    0	1	13	49	38	84	92	69;
    0	1	15	57	44	97	105	79;
    0	1	17	66	51	112	119	89;
    0	1	19	72	55	122	127	95;
    0	1	20	75	58	129	132	97;
    0	1	18	67	52	116	115	85;
    0	1	17	63	49	109	106	78;
    0	1	13	47	37	81	77	56;
    0	1	17	62	48	108	100	74;
    0	1	20	73	57	126	116	85;
    0	2	25	90	70	156	141	102;
    0	2	26	92	73	161	143	104;
    0	2	23	80	63	139	121	88;
    0	2	21	73	57	126	107	77;
    0	1	14	49	39	85	73	52;
    0	2	22	78	61	134	114	83;
    0	3	30	101	79	172	141	102;
    0	3	32	106	83	181	147	105;
    0	4	34	115	90	193	154	111;
    0	4	34	111	86	185	145	104;
    0	4	30	98	76	161	125	89;
    0	3	24	77	59	125	95	68;
    0	4	30	94	72	153	115	83;
    0	4	35	107	82	172	129	92;
    0	4	34	103	78	164	122	87;
    0	5	36	108	82	171	126	89;
    0	5	36	107	81	168	122	87;
    0	4	31	93	70	144	104	73;
    0	3	21	61	46	94	67	48;
    0	4	28	80	60	123	87	62;
    0	5	30	88	66	133	94	67;
    0	5	29	85	63	128	90	63;
    0	5	29	84	63	126	88	62;
    0	5	31	87	65	130	90	64;
    0	4	25	70	52	104	72	51;
    0	3	14	41	30	60	41	29;
    0	4	21	60	44	87	60	42;
    0	4	23	64	47	93	63	45;
    0	4	22	61	45	88	60	42;
    0	4	23	64	47	93	63	44;
    0	5	25	68	50	98	66	47;
    0	3	18	51	37	73	49	34;
    0	2	10	27	20	38	26	18;
    0	3	15	41	30	58	39	27;
    0	4	19	52	38	74	49	35;
    0	4	18	49	36	70	47	33;
    0	3	17	47	35	67	44	31;
    0	4	18	49	36	69	46	32;
    0	3	14	38	28	54	35	25;
    0	1	7	18	13	26	17	12;
    0	3	12	33	24	46	30	21;
    0	4	17	46	33	64	42	29;
    0	3	15	41	30	57	37	26;
    0	4	22	58	42	81	52	37;
    0	5	24	63	45	87	57	39;
    1	4	21	55	40	76	49	34;
    1	3	14	36	26	50	32	22;
    1	4	20	53	38	72	47	33;
    2	5	22	57	41	79	51	35;
    2	5	22	56	40	77	50	35;
    3	5	21	56	40	77	49	34;
    3	5	22	57	41	78	50	35;
    3	4	18	46	33	63	40	28;
    2	2	10	26	19	36	23	16;
    3	4	17	44	31	59	38	26;
    3	4	17	45	32	61	39	27;
    4	4	17	43	31	59	37	26;
    4	4	17	43	30	57	37	25;
    4	4	16	41	30	56	35	25;
    3	3	12	30	21	40	25	17;
    2	1	6	16	12	22	14	10;
    1	1	4	11	8	15	9	6;
    4	3	15	37	27	50	32	22;
    3	3	14	36	26	48	30	21;
    4	3	14	35	25	47	30	20;
    3	3	13	34	24	45	29	20;
    3	2	10	26	18	34	21	15;
    2	1	6	15	11	20	13	9;
    3	2	11	27	19	36	23	16;
    3	3	12	30	21	39	25	17;
    3	2	10	26	18	34	21	15;
    3	3	11	28	20	37	23	16;
    3	3	12	29	21	39	24	17;
    3	2	9	24	17	31	20	13;
    1	1	4	10	7	13	8	6;
    3	2	9	23	17	31	19	13;
    3	3	11	28	20	36	23	16;
    3	3	11	27	19	35	22	15;
    3	2	10	25	18	33	21	14;
    4	3	11	28	20	37	23	16;
    3	2	8	20	14	26	16	11;
    1	1	4	10	7	13	8	6;
    3	2	9	24	17	31	19	13;
    3	2	9	23	16	30	19	13;
    3	2	10	24	17	31	19	13;
    3	2	9	22	16	29	18	12;
    3	2	10	25	17	32	20	14;
    2	2	7	18	13	24	15	10;
    2	1	5	12	8	15	9	6;
    3	2	9	21	15	27	17	12;
    3	2	9	23	16	30	18	13;
    3	2	9	22	15	28	17	12;
    3	2	9	22	15	28	17	12;
    3	2	9	22	15	28	17	12;
    2	2	7	16	11	21	13	9;
    0	0	1	3	2	4	2	2;
    2	1	6	15	10	19	12	8]
    if p.scenario == :statuscuo

    elseif p.scenario == :half
        v = Int.(round.(v/2))
    else;
        v = [0 0 0 0 0 0 0 0;
        0 0 0 0 0 0 0 0]
    end

    return v
end

function vaccination_rate_2()
    
    v = [0 0 0 0 0 0 0 0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	0	0	0	0	0;
    0	0	0	3	2	3	1	1;
    0	0	1	7	5	8	2	1;
    0	0	1	15	10	14	3	2;
    0	0	2	20	13	18	4	2;
    0	0	2	22	14	19	4	2;
    0	0	1	6	4	5	1	0;
    0	0	0	4	3	3	1	0;
    0	0	3	31	20	26	5	1;
    0	0	3	33	21	27	6	2;
    0	0	4	40	25	33	7	2;
    0	0	2	22	14	18	4	1;
    0	0	2	15	9	13	3	1;
    0	0	1	10	6	8	2	1;
    0	0	1	6	4	5	1	0;
    0	0	1	9	6	8	2	1;
    0	0	4	39	25	33	8	3;
    0	0	5	38	24	33	7	3;
    0	0	4	32	20	28	6	3;
    0	0	2	17	11	15	4	2;
    0	0	2	12	8	11	3	2;
    0	0	2	13	8	12	3	2;
    0	0	6	44	29	41	10	6;
    0	0	5	40	26	37	9	6;
    0	0	6	46	30	43	11	8;
    0	0	6	47	31	45	12	9;
    0	0	6	41	27	40	11	9;
    0	0	2	13	9	13	4	3;
    0	0	1	10	7	10	3	3;
    0	0	3	18	12	18	6	5;
    0	0	5	32	21	32	10	10;
    0	0	11	70	47	70	24	23;
    0	0	10	63	43	64	23	23;
    0	0	10	64	43	65	24	25;
    0	0	6	35	24	36	15	15;
    0	0	4	25	17	26	11	12;
    0	0	12	70	48	73	33	36;
    0	0	14	83	57	87	41	44;
    0	0	15	85	58	89	44	49;
    0	0	17	95	65	100	52	59;
    0	0	15	84	58	90	51	58;
    0	0	12	68	47	73	44	51;
    0	0	12	62	43	67	43	50;
    0	0	5	26	18	29	19	22;
    0	0	13	67	47	74	50	59;
    0	0	10	55	38	60	42	50;
    0	0	12	61	43	67	50	58;
    0	0	11	57	40	63	49	58;
    0	0	12	61	43	69	56	65;
    0	0	8	40	28	45	39	45;
    0	0	5	26	19	30	26	31;
    0	0	6	31	22	35	31	37;
    0	0	9	44	31	50	46	54;
    0	0	13	64	46	73	70	82;
    0	0	14	66	47	76	75	88;
    0	0	9	46	33	54	55	64;
    0	0	6	27	19	32	34	39;
    0	0	5	24	17	29	31	36;
    0	0	5	24	17	28	31	35;
    0	0	6	30	22	36	41	46;
    0	0	9	43	31	51	60	67;
    0	0	10	45	33	55	65	72;
    0	0	7	35	25	42	51	56;
    0	0	6	27	20	33	41	45;
    0	0	6	26	19	33	41	44;
    0	0	5	22	16	27	34	37;
    0	0	6	26	19	33	41	44;
    0	0	8	37	27	48	61	63;
    0	0	11	52	38	67	88	90;
    0	0	10	46	34	61	80	80;
    0	0	6	27	20	36	48	47;
    0	0	6	28	21	37	50	49;
    0	0	7	33	25	44	60	58;
    0	0	9	40	30	54	74	71;
    0	0	10	44	33	59	81	77;
    0	0	11	49	36	66	92	86;
    0	0	9	42	31	58	81	74;
    0	0	7	31	23	43	60	55;
    0	0	10	43	32	59	83	75;
    0	0	12	52	39	73	103	92;
    0	0	14	60	45	85	119	105;
    0	1	19	81	61	115	161	141;
    0	1	20	89	66	127	177	153;
    0	1	17	72	54	105	146	124;
    0	0	12	54	41	79	109	92;
    0	0	14	61	47	90	124	103;
    0	0	15	66	51	98	135	111;
    0	1	17	71	54	106	145	118;
    0	1	21	87	66	131	177	142;
    0	1	21	87	66	133	177	141;
    0	0	15	63	49	98	128	101;
    0	0	9	39	30	61	80	63;
    0	0	13	55	43	86	113	89;
    0	1	14	57	44	90	114	88;
    0	1	16	66	51	105	130	100;
    0	1	19	76	59	123	147	113;
    0	1	19	74	57	120	140	106;
    0	1	15	60	46	98	112	84;
    0	1	13	49	38	81	90	68;
    0	1	15	54	42	90	98	73;
    0	1	15	58	45	96	102	76;
    0	1	19	69	54	115	120	89;
    0	1	21	76	59	127	130	96;
    0	1	20	74	58	124	124	91;
    0	1	18	63	49	107	104	76;
    0	1	15	53	41	90	85	62;
    0	1	18	65	51	111	104	76;
    0	1	20	71	56	122	112	82;
    0	2	24	83	64	142	129	94;
    0	2	25	89	69	152	136	98;
    0	2	23	81	63	139	122	88;
    0	2	22	77	60	132	113	81;
    0	1	17	59	46	100	85	61;
    0	2	22	76	60	130	109	78;
    0	2	26	88	69	150	124	89;
    0	3	32	107	85	183	149	107;
    0	3	33	109	85	185	149	107;
    0	3	30	100	78	168	134	95;
    0	3	27	87	67	145	113	81;
    0	3	23	72	56	120	93	66;
    0	4	32	105	81	173	134	95;
    0	4	35	112	86	185	141	100;
    0	4	30	97	75	159	121	86;
    0	4	32	101	78	163	123	87;
    0	5	34	105	81	171	127	89;
    0	4	28	86	65	137	101	71;
    0	3	20	61	46	96	70	50;
    0	4	27	80	61	126	91	64;
    0	5	30	90	68	140	100	71;
    0	5	28	85	64	131	94	66;
    0	5	29	85	64	131	93	65;
    0	6	31	91	68	139	98	69;
    0	4	26	74	56	113	79	56;
    0	3	15	42	31	63	44	31;
    0	4	22	63	47	94	65	46;
    0	4	24	69	51	103	71	50;
    0	4	23	64	48	96	66	46;
    0	4	23	65	48	97	66	46;
    0	5	25	70	52	103	70	49;
    0	4	19	54	40	79	53	37;
    0	2	11	31	23	45	30	21;
    0	4	18	51	38	75	50	35;
    0	4	18	51	38	75	50	35;
    0	3	17	47	34	68	45	31;
    0	3	17	47	35	68	45	31;
    0	4	19	51	38	73	49	34;
    0	3	15	40	29	57	38	26;
    0	2	7	20	15	29	19	13;
    0	1	6	16	11	22	15	10;
    0	4	21	57	41	80	53	37;
    0	4	17	46	33	65	42	30;
    0	4	20	53	39	76	50	35;
    0	5	22	58	43	82	54	37;
    1	4	19	50	37	71	46	32;
    1	3	12	33	24	46	30	21;
    1	4	18	49	36	69	45	31;
    2	4	20	55	40	76	49	34;
    2	4	19	52	38	72	47	33;
    2	4	19	50	36	70	45	31;
    3	5	21	57	41	79	51	35;
    2	4	16	44	32	61	39	27;
    2	2	9	25	18	34	22	15;
    3	4	16	43	31	60	38	26;
    3	4	18	47	34	65	42	29;
    3	4	17	44	32	60	38	27;
    4	4	16	42	30	57	37	25;
    4	4	16	42	30	57	36	25;
    3	3	12	30	22	41	26	18;
    2	1	6	16	12	22	14	10;
    2	2	9	22	16	30	19	13;
    4	3	14	35	26	48	30	21;
    3	3	13	34	25	46	29	20;
    4	3	13	33	24	45	28	19;
    3	3	13	32	23	44	28	19;
    3	2	9	24	17	32	20	14;
    2	1	5	14	10	19	12	8;
    3	2	9	23	17	31	20	13;
    3	3	11	28	20	37	23	16;
    3	2	10	24	17	33	20	14;
    3	2	9	24	17	32	20	14;
    3	2	10	25	18	33	21	14;
    2	2	7	18	13	24	15	10;
    0	0	1	2	2	3	2	1;
    2	1	6	15	11	20	13	9]
    if p.scenario == :statuscuo

    elseif p.scenario == :half
            v = Int.(round.(v/2.0))
    else
        v = [0 0 0 0 0 0 0 0;
        0 0 0 0 0 0 0 0]
    end
    return v
end